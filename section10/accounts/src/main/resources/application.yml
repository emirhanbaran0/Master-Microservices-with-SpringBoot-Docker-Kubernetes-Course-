server:
  port: 8080

spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: false
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
  config: #if your application properties are really important you can remove optional prefix
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true  # "/actuator/health/readiness"
    liveness-state:
      enabled: true  # "/actuator/health/readiness"
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    prefer-ip-address: true  #account ms will register to the eureka server with using Ä±p address
  client:
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "accounts"
    description: "Eazy Bank Accounts Application"
    version: "1.0.0"


logging:
  level:
    com:
      emirhanbaran:
        accounts: DEBUG

resilience4j.circuitbreaker:
  configs:
    default:
      sliding-window-size: 10
      permitted-number-of-calls-in-half-open-state: 2
      failure-rate-threshold: 50
      wait-duration-in-open-state:
        nanos: 10000

resilience4j.retry:
  configs:
    default:
      max-attempts: 3
      wait-duration:
        nanos: 100
      enable-exponential-backoff: true
      exponential-backoff-multiplier: 2
      ignore-exceptions:
        - java.lang.NullPointerException
      #retry-exceptions:
      #  - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeout-duration:
        nanos: 1000
      limit-refresh-period: 5000
      limit-for-period: 1


